@using Store.Models
@model Product

@{
    ViewBag.Title = "UserSale";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="formItem">
    <h2>Подать объявление</h2>
    <div class="main-scope">
        @Html.EditorFor(m => m.Name, new { data_bind = "value: Name" })
        @Html.EditorFor(m => m.Price, new { data_bind = "value: Price" })
        @Html.EditorFor(m => m.Color, new { data_bind = "value: Color" })
        @Html.EditorFor(m => m.Date, new { data_bind = "value: DateOfCreate" })
        @Html.EditorFor(m => m.Bluetooth, new { data_bind = "value: Bluetooth" })
        @Html.EditorFor(m => m.WiFi, new { data_bind = "value: WiFi" })
        <div class="item-control">
            @Html.LabelFor(m => m.Manufacturers, new { @class = "label-control" })
            @Html.DropDownListFor(m => m.Manufacturers, ViewBag.Manufacturer as SelectList)
        </div>
        <div class="item-control">
            @Html.LabelFor(m => m.Display, new { @class = "label-control" })
            @Html.DropDownListFor(m => m.Display, ViewBag.Display as SelectList)
        </div>
        <div class="item-control">
            <input type="text" id="tbx-file-path" value="No file chosen..." readonly="readonly" />
            <span class="btn fileinput-button">
                <span>Select file...</span>
                <input id="fu-my-simple-upload" name="MyFile" type="file" value="">
            </span>
            <a class="btn" href="#"  id="hl-start-upload">Start Upload</a>
        </div>
        <div class="item-control">
            @Html.LabelFor(m => m.TypeProduct, new { @class = "label-control" })
            <select id="typeProduct" data-bind="selectedOptions:selectedItems">
                <option value="0">Тип продукта</option>
                <option value="1">Смартфон</option>
                <option value="2">Ноутбук</option>
                <option value="3">Телевизор</option>
            </select>
        </div>
    </div>
    <div class="optional passive animated fadeIn">
        @Html.EditorFor(m => m.RAM, new { data_bind = "value: RAM" })
        <div class="item-control">
            @Html.LabelFor(m => m.OperatingSystem, new { @class = "label-control" })
            @Html.DropDownListFor(m => m.OperatingSystem, ViewBag.OperSystem as SelectList)
        </div>
        <div class="item-control">
            @Html.LabelFor(m => m.Processor, new { @class = "label-control" })
            @Html.DropDownListFor(m => m.Processor, ViewBag.Processor as SelectList)
        </div>
        <div class="phone-scope passive animated fadeIn">
            @Html.EditorFor(m => m.BuildMemory, new { data_bind = "value: BuildMemory" })
            <div class="item-control">
                @Html.LabelFor(m => m.Camera, new { @class = "label-control" })
                @Html.DropDownListFor(m => m.Camera, ViewBag.Camera as SelectList)
            </div>
        </div>
        <div class="notebook-scope passive animated fadeIn">
            <div class="item-control">
                @Html.LabelFor(m => m.HadrDisk, new { @class = "label-control" })
                @Html.DropDownListFor(m => m.HadrDisk, ViewBag.HardDisk as SelectList)
            </div>
            <div class="item-control">
                @Html.LabelFor(m => m.VideoCard, new { @class = "label-control" })
                @Html.DropDownListFor(m => m.VideoCard, ViewBag.VideoCard as SelectList)
            </div>
        </div>
    </div>
    <div class="item-control">
        <a class="btn">Создать</a>
    </div>
</div>
<script type="text/javascript">

    var jqXHRData;

    $(document).ready(function () {

        'use strict';

        $('#fu-my-simple-upload').fileupload({
            url: '/Home/UploadFile',
            dataType: 'json',
            add: function (e, data) {
                jqXHRData = data
            },
            done: function (event, data) {
                if (data.result.isUploaded) {
                    $("#tbx-file-path").val("No file chosen...");
                }
                else {

                }
                alert(data.result.message);
            },
            fail: function (event, data) {
                if (data.files[0].error) {
                    alert(data.files[0].error);
                }
            }
        });
    });

    $("#hl-start-upload").on('click', function () {
        if (jqXHRData) {
            jqXHRData.submit();
        }
        return false;
    });

    $("#fu-my-simple-upload").on('change', function () {
        $("#tbx-file-path").val(this.files[0].name);
    });

</script>


<script src="~/Scripts/jsfw/jquery-ui-1.9.2.min.js"></script>
<script src="~/Scripts/plugins/file-upload/jquery.fileupload.js"></script>
<script src="~/Scripts/plugins/file-upload/jquery.fileupload-ui.js"></script>
<script src="~/Scripts/plugins/file-upload/jquery.iframe-transport.js"></script>