@using Store.Models
@model Product

@{
    ViewBag.Title = "UserSale";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="formItem">
    <h2>Подать объявление</h2>
    <div class="main-scope">
        @Html.EditorFor(m => m.Name, new { data_bind = "value: Name" })
        @Html.EditorFor(m => m.Price, new { data_bind = "value: Price" })
        @Html.EditorFor(m => m.Color, new { data_bind = "value: Color" })
        @Html.EditorFor(m => m.Date, new { data_bind = "value: Date" })
        @Html.EditorFor(m => m.Bluetooth, new { data_bind = "checked: Bluetooth" })
        @Html.EditorFor(m => m.WiFi, new { data_bind = "checked: WiFi" })
        <div class="item-control">
            @Html.LabelFor(m => m.Manufacturers, new { @class = "label-control" })
            @Html.DropDownListFor(m => m.Manufacturers, ViewBag.Manufacturer as SelectList, new { data_bind = "value: Manufacturers" })
        </div>
        <div class="item-control">
            @Html.LabelFor(m => m.Display, new { @class = "label-control" })
            @Html.DropDownListFor(m => m.Display, ViewBag.Display as SelectList, new { data_bind = "value: Display" })
        </div>
        <div class="item-control">
            <input type="text" id="tbx-file-path" value="No file chosen..." readonly="readonly" />
            <span class="btn fileinput-button">
                <span>Select file...</span>
                <input id="fu-my-simple-upload" data-bind="value:selectFile" name="MyFile" type="file" value="">
            </span>
        </div>
        <div class="item-control">
            @Html.LabelFor(m => m.TypeProduct, new { @class = "label-control" })
            <select id="typeProduct" data-bind="selectedOptions:selectedItems">
                <option value="0">Тип продукта</option>
                <option value="1">Смартфон</option>
                <option value="2">Ноутбук</option>
                <option value="3">Телевизор</option>
            </select>
        </div>
    </div>
    <div class="optional passive animated fadeIn">
        @Html.EditorFor(m => m.RAM, new { data_bind = "value: RAM" })
        <div class="item-control">
            @Html.LabelFor(m => m.OperatingSystem, new { @class = "label-control" })
            @Html.DropDownListFor(m => m.OperatingSystem, ViewBag.OperSystem as SelectList, new { data_bind = "value: OperatingSystem" })
        </div>
        <div class="item-control">
            @Html.LabelFor(m => m.Processor, new { @class = "label-control" })
            @Html.DropDownListFor(m => m.Processor, ViewBag.Processor as SelectList, new { data_bind = "value: Processor" })
        </div>
        <div class="phone-scope passive animated fadeIn">
            @Html.EditorFor(m => m.BuildMemory, new { data_bind = "value: BuildMemory" })
            <div class="item-control">
                @Html.LabelFor(m => m.Camera, new { @class = "label-control" })
                @Html.DropDownListFor(m => m.Camera, ViewBag.Camera as SelectList, new { data_bind = "value: Camera" })
            </div>
        </div>
        <div class="notebook-scope passive animated fadeIn">
            <div class="item-control">
                @Html.LabelFor(m => m.HardDisk, new { @class = "label-control" })
                @Html.DropDownListFor(m => m.HardDisk, ViewBag.HardDisk as SelectList, new { data_bind = "value: HadrDisk" })
            </div>
            <div class="item-control">
                @Html.LabelFor(m => m.VideoCard, new { @class = "label-control" })
                @Html.DropDownListFor(m => m.VideoCard, ViewBag.VideoCard as SelectList, new { data_bind = "value: VideoCard" })
            </div>
        </div>
    </div>
    <div class="item-control">
        <a class="btn" data-bind="click:creteProduct">Создать</a>
    </div>
</div>

<script src="~/Scripts/jsfw/jquery-ui-1.9.2.min.js"></script>
@Scripts.Render("~/bundles/file-upload")